FORMAT: 1A
HOST: http://localhost:8080/

# File storage services

file storage is based upon a mongodb gridfs and contains following services to use

## Upload file [/update]

### upload a file [POST]

+ Request (multipart/form-data)
  
            
    + Body

            Content-Disposition: form-data; name="file";
            Content-Type: File
           
+ Response 200 (application/json)

            {
                "status": "ok"
                "response body"": " assgined id of stored  file"
            }

## Download file [/download/{fileId}]


### download file [GET]

+ Parameters
    + fileId: '57c76aa676ee4314fcfb8dbd' (string) - id of file

+ Request (text/html)
   
    
+ Response 200 (application/json)

            {
                "status": "ok"
                "content": "file"
            }
            
## Get meta data for file [/meta/{fileId}]


### meta from file [GET]

+ Parameters
    + fileId: '57c76aa676ee4314fcfb8dbd' (string) - id of file

+ Request (text/html)
   
    
+ Response 200 (application/json)

            {
                "status": "ok"
                "metaData": "some metad data as size , type etc."
            }            

## Create comment [/createComment]

### create some comment [POST]

+ Request (text/html)
  
           
+ Response 200 (application/json)

            {
                "status": "ok"
                "response body": " assgined id of created comment "
            }

## Get meta data for file [/assignComment/{commentId}/{fileId}]


### assign file to comment [GET]

+ Parameters
    + fileId: '57c76aa676ee4314fcfb8dbd' (string) - id of file
    + commentId: '57c80829cdd0692b6cc9f779' (string) - id of comment

+ Request (text/html)
   
    
+ Response 200 (application/json)

            {
                "status": "ok"
            }